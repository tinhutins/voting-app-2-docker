pipeline {
    agent none
   }
    stages {
        stage('build') 
        agent {
	docker {
        image 'maven:3.8.1-adoptopenjdk-11'
        args  '-v $HOME/.m2:/root/.m2'
       }
       }
            steps {
                echo 'compiling worker app!'
		dir ('worker'){
                sh ' mvn compile'
		}
            }
        }
        stage('test'){
        agent {
	docker {
        image 'maven:3.8.1-adoptopenjdk-11'
        args  '-v $HOME/.m2:/root/.m2'
        }
	}
            steps {
                echo 'Running unit tests'
                dir ('worker'){
                sh 'mvn clean test'
                }  
	  }
        }
        stage('package') {
            when {
	      branch 'master'
	    }
        agent {
	docker {
        image 'maven:3.8.1-adoptopenjdk-11'
        args  '-v $HOME/.m2:/root/.m2'
	}
	}
            steps {
                echo 'Packaging worker app'
                dir ('worker'){
		sh 'mvn package -DskipTests'
                archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
                }
            }
        }
        stage('package-docker') {
             agent any
	     when {
	      changeset "**/worker/**"
	    }
            steps {
                echo 'Packaging worker app with docker'
    		script {

		docker.withRegistry('https://index.docker.io/v1', 'dockerlogin')
		def workerImage = docker.build("hutinskit/worker:v${env.BUILD_ID}", "./worker")
		workerImage.push()
		workerImage.push("${env.BRANC_NAME}")

		}
            }
        }
    
    post {
        always {
            echo 'Pipeline for worker is completed.'
        }
    }
    
    
}
